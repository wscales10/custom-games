settings
{
	main
	{
		Description: "Movement speed, healing and damage all slowly increase over the course of a match but reset if you die. Eliminations, especially multikills, greatly increase your charge."
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Map Rotation: After A Game
		Max FFA Players: 8
		Return To Lobby: Never
	}

	modes
	{
		Deathmatch
		{
			Self Initiated Respawn: Off

			disabled maps
			{
				Black Forest Winter
				Blizzard World Winter
				Ch√¢teau Guillard Halloween
				Ecopoint: Antarctica Winter
				Eichenwalde Halloween
				Hanamura Winter
				Hollywood Halloween
				King's Row Winter
				Lijiang Control Center Lunar New Year
				Lijiang Garden Lunar New Year
				Lijiang Night Market Lunar New Year
				Workshop Expanse
			}
		}

		General
		{
			Respawn Time Scalar: 75%
		}
	}
}

variables
{
	player:
		2: Coefficient
		18: SpawnTime
}

subroutines
{
	0: Update
}

rule("Global Setup")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Inspector Recording;
	}
}

rule("Player Setup")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Filtered Array(Event Player, Is Alive(Event Player)), Custom String("Charge: {0}%", Round To Integer(Multiply(100,
			Subtract(Player Variable(Event Player, M), 1)), Up), Null, Null), Null, Null, Right, 0, White, White, White,
			Visible To and String, Default Visibility);
		Start Damage Modification(Event Player, All Players(All Teams), Multiply(100, Square Root(Player Variable(Event Player, M))),
			Receivers Damagers and Damage Percent);
		Start Damage Modification(All Players(All Teams), Event Player, Multiply(100, Square Root(Player Variable(Event Player, M))),
			Receivers Damagers and Damage Percent);
		Chase Player Variable At Rate(Event Player, A, 0, Divide(Player Variable(Event Player, A), 3), Destination and Rate);
		Create Effect(Remove From Array(All Players(All Teams), Event Player), Energy Sound, White, Event Player, 1,
			Visible To Position and Radius);
	}
}

rule("Respawn Reset")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Is Game In Progress == True;
	}

	actions
	{
		Set Player Variable(Event Player, Coefficient, Multiply(1.200, Divide(Add(Match Time, 248), Add(Match Time, 425))));
		Set Player Variable(Event Player, SpawnTime, Match Time);
	}
}

rule("Loop")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Player Variable(Event Player, SpawnTime) != 0;
	}

	actions
	{
		Set Player Variable(Event Player, M, Add(Subtract(1.700, Multiply(Player Variable(Event Player, Coefficient), Raise To Power(
			Divide(Match Time, Player Variable(Event Player, SpawnTime)), 2))), Player Variable(Event Player, A)));
		Call Subroutine(Update);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("Quick Hero Select")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(10);
	}
}

rule("Death")
{
	event
	{
		Player Died;
		All;
		All;
	}

	actions
	{
		Set Player Variable(Event Player, SpawnTime, 0);
	}
}

rule("Elim")
{
	event
	{
		Player Earned Elimination;
		All;
		All;
	}

	actions
	{
		Small Message(Event Player, Player Variable(Event Player, A));
		Modify Player Variable(Event Player, A, Add, Subtract(1.400, Multiply(0.900, Divide(Match Time, Player Variable(Event Player,
			SpawnTime)))));
	}
}

rule("Waiting for Players")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == False;
	}

	actions
	{
		Set Player Variable(Event Player, M, 1);
		Call Subroutine(Update);
	}
}

rule("Update Rule")
{
	event
	{
		Subroutine;
		Update;
	}

	actions
	{
		Set Move Speed(Event Player, Multiply(100, Player Variable(Event Player, M)));
		Set Healing Received(Event Player, Multiply(100, Player Variable(Event Player, M)));
		disabled Set Damage Dealt(Event Player, Multiply(100, Square Root(Player Variable(Event Player, M))));
		disabled Set Damage Received(Event Player, Multiply(100, Square Root(Player Variable(Event Player, M))));
	}
}