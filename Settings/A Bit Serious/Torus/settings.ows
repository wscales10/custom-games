settings
{
	lobby
	{
		Allow Players Who Are In Queue: Yes
		Max FFA Players: 8
	}

	modes
	{
		Deathmatch
		{
			Score To Win: 20

			enabled maps
			{
				Workshop Expanse
				Workshop Expanse Night
			}
		}

		General
		{
			Respawn Time Scalar: 40%
		}
	}
}

rule("Rule 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		(Absolute Value(X Component Of(Position Of(Event Player)) - Global.A / 2) > Global.A / 2 || Absolute Value(Z Component Of(
			Position Of(Event Player)) - Global.A / 2) > Global.A / 2) == True;
	}

	actions
	{
		Teleport(Event Player, Vector((X Component Of(Position Of(Event Player)) % Global.A + Global.A) % Global.A, Y Component Of(
			Position Of(Event Player)), (Z Component Of(Position Of(Event Player)) % Global.A + Global.A) % Global.A));
		Wait(0.150, Abort When False);
		Loop If Condition Is True;
	}
}

rule("Rule 2")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.A = 4 * Workshop Setting Integer(Custom String("General"), Custom String("Arena Size"), 8, 1, 20, 0);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(0, 0, 0), Vector(Global.A, 0, 0), Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(Global.A, 0, 0), Vector(Global.A, 0, Global.A), Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(Global.A, 0, Global.A), Vector(0, 0, Global.A), Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(0, 0, Global.A), Vector(0, 0, 0), Color(Red),
			Visible To Position and Radius);
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * Left, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * Right, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * Forward, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * Backward, 1, Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * (Left + Forward), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * (Right + Backward), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * (Forward + Right), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player), Is Alive(
			Event Player)), Sphere, Color(Red), Eye Position(Event Player) + Global.A * (Backward + Left), 1,
			Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * Left, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * Right, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * Forward, 1, Visible To Position and Radius);
		Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * Backward, 1, Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * (Left + Forward), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * (Right + Backward), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * (Forward + Right), 1,
			Visible To Position and Radius);
		disabled Create Effect(Filtered Array(Remove From Array(All Players(All Teams), Remove From Array(All Players(Opposite Team Of(Team Of(
			Event Player))), Event Player)), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra) && Is Using Ability 1(
			Event Player))), Sphere, Color(Blue), Eye Position(Event Player) + Global.A * (Backward + Left), 1,
			Visible To Position and Radius);
		Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * Left,
			1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * Right,
			1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * Forward,
			1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player)
			+ Global.A * Backward, 1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		disabled Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * (
			Left + Forward), 1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		disabled Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * (
			Right + Backward), 1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		disabled Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * (
			Forward + Right), 1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
		disabled Create In-World Text(Filtered Array(All Players(All Teams), Is Alive(Event Player) && !(Hero Of(Event Player) == Hero(Sombra)
			&& Is Using Ability 1(Event Player))), Hero Icon String(Hero Of(Event Player)), Position Of(Event Player) + Global.A * (
			Backward + Left), 1.500, Clip Against Surfaces, Visible To Position and String, Color(White), Visible Always);
	}
}

rule("Rule 4")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(15);
	}
}